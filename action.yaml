---
name: 'GUAC Ingest AWS'
description: 'Ingest files into Kusari hosted GUAC platform'
branding:
  icon: "shield"
  color: "purple"
author: 'Kusari'

inputs:
  files:
    description: 'path to directory or specific file to ingest'
    required: true
  simulate-failure:
    description: 'Set this (string) to true to force the action to fail'
    required: false
    default: 'false'
  # tenant:
  #   description: 'Kusari Hosted GUAC Tenant Name'
  #   required: true
  client-id:
    description: 'OAuth2 Client Id'
    required: true
  client-secret:
    description: 'OAuth2 Client Secret'
    required: true
  tenant-api-endpoint:
    description: 'Kusari Hosted GUAC Tenant API Endpoint'
    required: true
  auth-server-token-endpoint:
    description: 'Kusari OAuth2 Server Token Endpoint'
    required: true
    default: 'https://auth.us.kusari.cloud/oauth2/token'

outputs:
  console_out:
    description: 'raw console output from guaccollect command'

runs:
  using: "composite"
  steps:
    - name: simulate failure 
      if: ${{ inputs.simulate-failure == true || inputs.simulate-failure == 'true' }}
      shell: bash
      run: |
        echo "Failing deliberately..."
        exit 1

    - name: Ingest files
      shell: bash
      run: |
        FORM_POST_PAYLOAD="client_id=${{ inputs.client-id }}&client_secret=${{ inputs.client-secret }}&grant_type=client_credentials"
        jwt=$(curl ${{ inputs.auth-server-token-endpoint }} -d ${FORM_POST_PAYLOAD} | jq .access_token -r)
        echo ''{"filename": "${{ inputs.files }}" }'' > payload
        presignedUrl=$(curl -H "Authorization: Bearer $jwt" ${{ inputs.tenant-api-endpoint }}/presign -d @payload  | jq .presignedUrl -r)
        curl -v --upload-file ${{ inputs.files }} ${presignedUrl}
